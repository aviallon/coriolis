.TH "KiteEngine" 3 "Sun Nov 21 2021" "Version 1.0" "Kite - Detailed Router" \" -*- nroff -*-
.ad l
.nh
.SH NAME
KiteEngine \- The \fBKite\fP Tool\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBKatabaticEngine\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBKatabaticEngine\fP * \fBbase\fP ()"
.br
.ti -1c
.RI "Configuration * \fBgetKiteConfiguration\fP ()"
.br
.ti -1c
.RI "virtual Configuration * \fBgetConfiguration\fP ()"
.br
.ti -1c
.RI "\fBNet\fP * \fBgetBlockageNet\fP ()"
.br
.ti -1c
.RI "bool \fBgetToolSuccess\fP () const"
.br
.ti -1c
.RI "unsigned long \fBgetEventsLimit\fP () const"
.br
.ti -1c
.RI "unsigned int \fBgetRipupLimit\fP (unsigned int type) const"
.br
.ti -1c
.RI "unsigned int \fBgetRipupCost\fP () const"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static const \fBName\fP & \fBstaticGetName\fP ()"
.br
.ti -1c
.RI "static \fBKiteEngine\fP * \fBcreate\fP (\fBCell\fP *)"
.br
.ti -1c
.RI "static \fBKiteEngine\fP * \fBget\fP (const \fBCell\fP *)"
.br
.in -1c
.SH "Detailed Description"
.PP 
The \fBKite\fP Tool\&. 

\fBLookup Mechanism\fP
.PP
Please look at \fBKite::Session\fP for an explanation of the lookup mechanism from \fBHurricane::Segment\fP or \fBKatabatic::AutoSegment\fP to \fBTrackSegment\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "const \fBName\fP & staticGetName ()\fC [static]\fP"
\fBReturns:\fP The unique string identifier for the \fBKiteEngine\fP class of ToolEngine\&. 
.SS "\fBKiteEngine\fP * create (\fBCell\fP * cell)\fC [static]\fP"
Create a \fBKiteEngine\fP on \fCcell\fP\&. 
.SS "\fBKiteEngine\fP * get (const \fBCell\fP * cell)\fC [static]\fP"
\fBReturns:\fP The \fBKiteEngine\fP associated to \fCcell\fP\&. \fCNULL\fP if there isn't\&. 
.SS "\fBKatabaticEngine\fP * base ()\fC [inline]\fP"
\fBReturns:\fP The \fBKiteEngine\fP, casted as it's base class (KatabaticEngine)\&. 
.SS "Configuration * getKiteConfiguration ()\fC [inline]\fP"
\fBReturns:\fP The \fBKiteEngine\fP configuration\&. The \fBKite\fP Configuration is a derived class of KatabaticConfiguration\&. 
.SS "Configuration * getConfiguration ()\fC [virtual]\fP"
\fBReturns:\fP The \fBKiteEngine\fP configuration\&. 
.PP
Reimplemented from \fBKatabaticEngine\fP\&.
.SS "\fBNet\fP * getBlockageNet ()\fC [inline]\fP"
\fBReturns:\fP The Net which is used to mark the blockage segments\&. It's not part of the Configuration \fIper se\fP but an isolated attribute\&. 
.SS "bool getToolSuccess () const\fC [inline]\fP"
\fBReturns:\fP \fBtrue\fP if the tool was successful, that is, all the Net were routeds\&. 
.SS "unsigned long getEventsLimit () const\fC [inline]\fP"
\fBReturns:\fP The maximal number of allowed routing events\&. This limit is a security against infinite looping, be sure that it is great enough not to prevent normal routing completion\&. 
.SS "unsigned long getRipupLimit (unsigned int type) const\fC [inline]\fP"
\fBReturns:\fP the maximum ripup allowed of a segment of \fCtype\fP\&. 
.PP
Referenced by Manipulator::canRipup(), and SegmentAction::doAction()\&.
.SS "unsigned long getRipupCost () const\fC [inline]\fP"
\fBReturns:\fP the differential used while comparing two ripup costs\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Kite - Detailed Router from the source code\&.
